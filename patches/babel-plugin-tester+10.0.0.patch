diff --git a/node_modules/babel-plugin-tester/dist/plugin-tester.js b/node_modules/babel-plugin-tester/dist/plugin-tester.js
index ae96e33..e1976c7 100644
--- a/node_modules/babel-plugin-tester/dist/plugin-tester.js
+++ b/node_modules/babel-plugin-tester/dist/plugin-tester.js
@@ -73,10 +73,11 @@ function pluginTester(_ref = {}) {
     tests,
     fixtures,
     fixtureOutputName = 'output',
+    fixtureOutputExt = '.js',
     filename,
     endOfLine = 'lf'
   } = _ref,
-      rest = _objectWithoutProperties(_ref, ["babel", "plugin", "pluginName", "title", "pluginOptions", "tests", "fixtures", "fixtureOutputName", "filename", "endOfLine"]);
+      rest = _objectWithoutProperties(_ref, ["babel", "plugin", "pluginName", "title", "pluginOptions", "tests", "fixtures", "fixtureOutputName", "fixtureOutputExt", "filename", "endOfLine"]);
 
   let testNumber = 1;
 
@@ -88,6 +89,7 @@ function pluginTester(_ref = {}) {
       title: describeBlockTitle,
       fixtures,
       fixtureOutputName,
+      fixtureOutputExt,
       filename,
       babel,
       endOfLine
@@ -322,7 +324,7 @@ const createFixtureTests = (fixturesDir, options) => {
       return;
     }
 
-    it(blockTitle, () => {
+    const testBody = () => {
       const {
         plugin,
         pluginOptions,
@@ -357,6 +359,8 @@ const createFixtureTests = (fixturesDir, options) => {
 
       if (fixtureOutputExt) {
         ext = fixtureOutputExt;
+      } else if (options.fixtureOutputExt) {
+        ext = options.fixtureOutputExt;
       } else {
         ext = `.${codePath.split('.').pop()}`;
       }
@@ -372,7 +376,13 @@ const createFixtureTests = (fixturesDir, options) => {
       const output = _fs.default.readFileSync(outputPath, 'utf8');
 
       _assert.default.equal(actual.trim(), fixLineEndings(output, endOfLine), `actual output does not match ${fixtureOutputName}${ext}`);
-    });
+    };
+
+    if (fixturePluginOptions.skip) {
+      it.skip(blockTitle, testBody);
+    } else {
+      it(blockTitle, testBody);
+    }
   });
 };
 
