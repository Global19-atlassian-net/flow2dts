// @flow
declare var React: typeof $2;
const $2 = require("react");

import type {PressEvent} from "../Types/CoreEventTypes";
import type {ColorValue} from "../StyleSheet/StyleSheetTypes";

type ButtonProps = $ReadOnly<
  {|
    /**
   * Text to display inside the button
   */
    title: string,
    
    /**
   * Handler to be called when the user taps the button
   */
    onPress: (event?: PressEvent) => mixed,
    
    /**
   * If true, doesn't play system sound on touch (Android Only)
   **/
    touchSoundDisabled?: ?boolean,
    
    /**
   * Color of the text (iOS), or background color of the button (Android)
   */
    color?: ?ColorValue,
    
    /**
   * TV preferred focus (see documentation for the View component).
   */
    hasTVPreferredFocus?: ?boolean,
    
    /**
   * TV next focus down (see documentation for the View component).
   *
   * @platform android
   */
    nextFocusDown?: ?number,
    
    /**
   * TV next focus forward (see documentation for the View component).
   *
   * @platform android
   */
    nextFocusForward?: ?number,
    
    /**
   * TV next focus left (see documentation for the View component).
   *
   * @platform android
   */
    nextFocusLeft?: ?number,
    
    /**
   * TV next focus right (see documentation for the View component).
   *
   * @platform android
   */
    nextFocusRight?: ?number,
    
    /**
   * TV next focus up (see documentation for the View component).
   *
   * @platform android
   */
    nextFocusUp?: ?number,
    
    /**
   * Text to display for blindness accessibility features
   */
    accessibilityLabel?: ?string,
    
    /**
   * If true, disable all interactions for this component.
   */
    disabled?: ?boolean,
    
    /**
   * Used to locate this view in end-to-end tests.
   */
    testID?: ?string,
  |},
>;

declare class Button
  extends $1<ButtonProps> {
  render(): React.Node,
}
declare var $1: typeof React.Component;

declare module.exports: typeof Button;
