{
    "imports": {
        "NativeEventEmitter": {
            "source": {
                "row": 2,
                "column": 8,
                "local": "NativeEventEmitter"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\EventEmitter\\NativeEventEmitter.js.flow:17:15,17:32\r\n"
        },
        "EventConfig": {
            "source": {
                "row": 4,
                "column": 14,
                "local": "EventConfig"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\Animated\\AnimatedEvent.js.flow:6:6,6:16\r\n"
        },
        "EventMapping": {
            "source": {
                "row": 5,
                "column": 14,
                "local": "EventMapping"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\Animated\\NativeAnimatedModule.js.flow:8:6,8:17\r\n"
        },
        "AnimatedNodeConfig": {
            "source": {
                "row": 6,
                "column": 14,
                "local": "AnimatedNodeConfig"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\Animated\\NativeAnimatedModule.js.flow:13:6,13:23\r\n"
        },
        "AnimatingNodeConfig": {
            "source": {
                "row": 7,
                "column": 14,
                "local": "AnimatingNodeConfig"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\Animated\\NativeAnimatedModule.js.flow:14:6,14:24\r\n"
        },
        "AnimationConfig": {
            "source": {
                "row": 8,
                "column": 14,
                "local": "AnimationConfig"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\Animated\\animations\\Animation.js.flow:7:6,7:20\r\n"
        },
        "EndCallback": {
            "source": {
                "row": 9,
                "column": 14,
                "local": "EndCallback"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\Animated\\animations\\Animation.js.flow:5:6,5:16\r\n"
        },
        "InterpolationConfigType": {
            "source": {
                "row": 10,
                "column": 14,
                "local": "InterpolationConfigType"
            },
            "stdout": "C:\\Code\\ZihanChen-MSFT\\flow2dts\\workbench\\react-native\\d8b0997a\\inputs\\Libraries\\Animated\\nodes\\AnimatedInterpolation.js.flow:9:6,9:28\r\n"
        }
    },
    "decls": [
        {
            "row": 13,
            "column": 3,
            "local": "getValue",
            "type": "value"
        },
        {
            "row": 14,
            "column": 3,
            "local": "setWaitingForIdentifier",
            "type": "value"
        },
        {
            "row": 15,
            "column": 3,
            "local": "unsetWaitingForIdentifier",
            "type": "value"
        },
        {
            "row": 16,
            "column": 3,
            "local": "disableQueue",
            "type": "value"
        },
        {
            "row": 17,
            "column": 3,
            "local": "queueOperation",
            "type": "value"
        },
        {
            "row": 18,
            "column": 3,
            "local": "createAnimatedNode",
            "type": "value"
        },
        {
            "row": 19,
            "column": 3,
            "local": "startListeningToAnimatedNodeValue",
            "type": "value"
        },
        {
            "row": 20,
            "column": 3,
            "local": "stopListeningToAnimatedNodeValue",
            "type": "value"
        },
        {
            "row": 21,
            "column": 3,
            "local": "connectAnimatedNodes",
            "type": "value"
        },
        {
            "row": 22,
            "column": 3,
            "local": "disconnectAnimatedNodes",
            "type": "value"
        },
        {
            "row": 23,
            "column": 3,
            "local": "startAnimatingNode",
            "type": "value"
        },
        {
            "row": 29,
            "column": 3,
            "local": "stopAnimation",
            "type": "value"
        },
        {
            "row": 30,
            "column": 3,
            "local": "setAnimatedNodeValue",
            "type": "value"
        },
        {
            "row": 31,
            "column": 3,
            "local": "setAnimatedNodeOffset",
            "type": "value"
        },
        {
            "row": 32,
            "column": 3,
            "local": "flattenAnimatedNodeOffset",
            "type": "value"
        },
        {
            "row": 33,
            "column": 3,
            "local": "extractAnimatedNodeOffset",
            "type": "value"
        },
        {
            "row": 34,
            "column": 3,
            "local": "connectAnimatedNodeToView",
            "type": "value"
        },
        {
            "row": 35,
            "column": 3,
            "local": "disconnectAnimatedNodeFromView",
            "type": "value"
        },
        {
            "row": 36,
            "column": 3,
            "local": "restoreDefaultValues",
            "type": "value"
        },
        {
            "row": 37,
            "column": 3,
            "local": "dropAnimatedNode",
            "type": "value"
        },
        {
            "row": 38,
            "column": 3,
            "local": "addAnimatedEventToView",
            "type": "value"
        },
        {
            "row": 43,
            "column": 3,
            "local": "removeAnimatedEventFromView",
            "type": "value"
        },
        {
            "row": 12,
            "column": 13,
            "local": "API",
            "type": "value"
        },
        {
            "row": 50,
            "column": 18,
            "local": "addWhitelistedStyleProp",
            "type": "value"
        },
        {
            "row": 52,
            "column": 18,
            "local": "addWhitelistedTransformProp",
            "type": "value"
        },
        {
            "row": 54,
            "column": 18,
            "local": "addWhitelistedInterpolationParam",
            "type": "value"
        },
        {
            "row": 60,
            "column": 9,
            "local": "type",
            "type": "value"
        },
        {
            "row": 61,
            "column": 9,
            "local": "property",
            "type": "value"
        },
        {
            "row": 62,
            "column": 9,
            "local": "nodeTag",
            "type": "value"
        },
        {
            "row": 66,
            "column": 9,
            "local": "type",
            "type": "value"
        },
        {
            "row": 67,
            "column": 9,
            "local": "property",
            "type": "value"
        },
        {
            "row": 68,
            "column": 9,
            "local": "value",
            "type": "value"
        },
        {
            "row": 56,
            "column": 18,
            "local": "validateTransform",
            "type": "value"
        },
        {
            "row": 74,
            "column": 18,
            "local": "validateStyles",
            "type": "value"
        },
        {
            "row": 76,
            "column": 18,
            "local": "validateInterpolation",
            "type": "value"
        },
        {
            "row": 78,
            "column": 18,
            "local": "generateNewNodeTag",
            "type": "value"
        },
        {
            "row": 80,
            "column": 18,
            "local": "generateNewAnimationId",
            "type": "value"
        },
        {
            "row": 82,
            "column": 18,
            "local": "assertNativeAnimatedModule",
            "type": "value"
        },
        {
            "row": 84,
            "column": 18,
            "local": "shouldUseNativeDriver",
            "type": "value"
        },
        {
            "row": 88,
            "column": 18,
            "local": "transformDataType",
            "type": "value"
        },
        {
            "row": 91,
            "column": 3,
            "local": "API",
            "type": "value"
        },
        {
            "row": 92,
            "column": 3,
            "local": "addWhitelistedStyleProp",
            "type": "value"
        },
        {
            "row": 93,
            "column": 3,
            "local": "addWhitelistedTransformProp",
            "type": "value"
        },
        {
            "row": 94,
            "column": 3,
            "local": "addWhitelistedInterpolationParam",
            "type": "value"
        },
        {
            "row": 95,
            "column": 3,
            "local": "validateStyles",
            "type": "value"
        },
        {
            "row": 96,
            "column": 3,
            "local": "validateTransform",
            "type": "value"
        },
        {
            "row": 97,
            "column": 3,
            "local": "validateInterpolation",
            "type": "value"
        },
        {
            "row": 98,
            "column": 3,
            "local": "generateNewNodeTag",
            "type": "value"
        },
        {
            "row": 99,
            "column": 3,
            "local": "generateNewAnimationId",
            "type": "value"
        },
        {
            "row": 100,
            "column": 3,
            "local": "assertNativeAnimatedModule",
            "type": "value"
        },
        {
            "row": 101,
            "column": 3,
            "local": "shouldUseNativeDriver",
            "type": "value"
        },
        {
            "row": 102,
            "column": 3,
            "local": "transformDataType",
            "type": "value"
        },
        {
            "row": 104,
            "column": 7,
            "local": "nativeEventEmitter",
            "type": "value"
        }
    ]
}